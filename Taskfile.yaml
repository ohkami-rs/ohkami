version: 3

vars:
  maybe_nightly: { sh: cargo version | grep -q 'nightly' && echo 'nightly' || echo ''  }

tasks:
  CI:
    deps:
      - task: test
      - task: check
      - task: bench:dryrun

  test:
    deps:
      - task: test:core
      - task: test:other
  test:core:
    deps:
      - task: test:no_rt
      - for:  [tokio, smol, nio, glommio, monoio, compio, lambda, worker]
        task: test:rt
        vars: { rt: '{{.ITEM}}' }
  test:other:
    deps:
      - task: test:deps
      - task: test:doc
      - task: test:examples
      - task: test:samples

  check:
    deps:
      - task: check:fmt
      - task: check:no_rt
      - for:  [tokio, smol, nio, glommio, monoio, compio, lambda]
        task: check:rt-native-and-lambda
        vars: { rt: '{{.ITEM}}' }
      - task: check:rt_worker

  bench:dryrun:
    status:
      - '[ "{{.maybe_nightly}}" != nightly ]' # skip if not nightly
    cmds:
      - cd benches && cargo bench --features DEBUG --no-run
      - cd benches_rt/vs_actix-web && cargo check
      - for: [tokio, smol, nio, glommio, monoio, compio]
        cmd: cd benches_rt/{{.ITEM}} && cargo check

  bench:
    status:
      - '[ "{{.maybe_nightly}}" != nightly ]' # skip if not nightly
    dir: ./benches
    cmds:
      - task: bench:dryrun
      - cargo bench --features DEBUG

#### tests ####
  test:deps:
    cmds:
      - cargo test -p ohkami_lib
      - cargo test -p ohkami_openapi

  test:doc:
    dir: ./ohkami
    cmds:
      - cargo test --doc --no-default-features --features DEBUG,rt_tokio,sse,ws,tls,{{.maybe_nightly}}
      # not activating `openapi` feature for testability of README sample codes

  test:examples:
    dir: ./examples
    cmds:
      - chmod +x ./test.sh
      - ./test.sh

  test:samples:
    dir: ./samples
    cmds:
      - chmod +x ./test.sh
      - ./test.sh

  test:no_rt:
    dir: ./ohkami
    cmds:
      - cargo test --lib --features DEBUG,{{.maybe_nightly}}
      - cargo test --lib --features DEBUG,sse,{{.maybe_nightly}}
      - cargo test --lib --features DEBUG,ws,{{.maybe_nightly}}
      - cargo test --lib --features DEBUG,sse,ws,openapi,{{.maybe_nightly}}

  test:rt:
    dir: ./ohkami
    cmds:
      - cargo test --lib --features rt_{{.rt}},DEBUG,{{.maybe_nightly}}
      - cargo test --lib --features rt_{{.rt}},DEBUG,sse,{{.maybe_nightly}}
      - cargo test --lib --features rt_{{.rt}},DEBUG,ws,{{.maybe_nightly}}
      - cargo test --lib --features rt_{{.rt}},DEBUG,sse,ws,openapi,{{.maybe_nightly}}
      - cargo test --lib --features rt_{{.rt}},DEBUG,tls,{{.maybe_nightly}}
      - cargo test --lib --features rt_{{.rt}},DEBUG,sse,ws,tls,{{.maybe_nightly}}

#### checks ####
  check:fmt:
    cmds:
      - cargo fmt --all --check

  check:no_rt:
    vars:
      MAYBE_NIGHTLY_FEATURES:
        sh: cargo version | grep -q 'nightly' && echo '--features nightly' || echo ''
    cmds:
      - cargo clippy --all-targets {{.MAYBE_NIGHTLY_FEATURES}} -- --deny warnings
      - cargo clippy --all-targets --features sse,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features ws,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features sse,ws,openapi,{{.maybe_nightly}} -- --deny warnings

  check:rt-native-and-lambda:
    cmds:
      - cargo clippy --all-targets --features rt_{{.rt}},{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features rt_{{.rt}},sse,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features rt_{{.rt}},ws,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features rt_{{.rt}},sse,ws,openapi,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features rt_{{.rt}},tls,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --all-targets --features rt_{{.rt}},sse,ws,tls,{{.maybe_nightly}} -- --deny warnings

  check:rt_worker:
    cmds:
      - cargo clippy --target wasm32-unknown-unknown --features rt_worker,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --target wasm32-unknown-unknown --features rt_worker,sse,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --target wasm32-unknown-unknown --features rt_worker,ws,{{.maybe_nightly}} -- --deny warnings
      - cargo clippy --target wasm32-unknown-unknown --features rt_worker,sse,ws,openapi,{{.maybe_nightly}} -- --deny warnings
